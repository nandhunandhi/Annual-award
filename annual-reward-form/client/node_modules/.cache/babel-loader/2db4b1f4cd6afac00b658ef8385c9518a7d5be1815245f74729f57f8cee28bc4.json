{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monika Sm\\\\Annual-Rewards\\\\annual-reward-form\\\\client\\\\src\\\\components\\\\NominationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NominationForm = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [form, setForm] = useState({\n    employeeName: \"\",\n    employeeId: \"\",\n    department: \"\",\n    designation: \"\",\n    yearOfNomination: new Date().getFullYear() - 1,\n    awardType: \"\",\n    filledDoc: null,\n    nominatorName: \"\",\n    nominatorDept: \"\",\n    nominatorDesig: \"\"\n  });\n\n  // Fetch employee data from MongoDB via backend API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/employees\");\n        setData(res.data); // Assumes an array of employee objects\n      } catch (err) {\n        console.error(\"Failed to load employee data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: files ? files[0] : value\n    });\n\n    // Autofill employee info\n    if (name === \"employeeName\") {\n      const emp = data.find(emp => emp.employeeName === value);\n      if (emp) {\n        setForm(prev => ({\n          ...prev,\n          employeeId: emp.employeeId,\n          department: emp.department,\n          designation: emp.designation\n        }));\n      }\n    }\n\n    // Autofill nominator info\n    if (name === \"nominatorName\") {\n      const nom = data.find(emp => emp.employeeName === value);\n      if (nom) {\n        setForm(prev => ({\n          ...prev,\n          nominatorDept: nom.department,\n          nominatorDesig: nom.designation\n        }));\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const fd = new FormData();\n    Object.entries(form).forEach(([k, v]) => fd.append(k, v));\n    try {\n      await axios.post(\"http://localhost:5000/api/nominations\", fd, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Nomination submitted successfully!\");\n      // Optionally reset form\n    } catch (err) {\n      alert(\"Submission failed\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Annual Nomination Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Employee Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"employeeName\",\n      required: true,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), data.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: emp.employeeName,\n        children: emp.employeeName\n      }, emp.employeeId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"employeeId\",\n      readOnly: true,\n      value: form.employeeId,\n      placeholder: \"Employee ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"department\",\n      readOnly: true,\n      value: form.department,\n      placeholder: \"Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"designation\",\n      readOnly: true,\n      value: form.designation,\n      placeholder: \"Designation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"yearOfNomination\",\n      readOnly: true,\n      value: form.yearOfNomination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Award Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"awardType\",\n      required: true,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Award --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Team Awesome Award\",\n        children: \"Team Awesome Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Outstanding Leadership\",\n        children: \"Outstanding Leadership\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload Filled Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"filledDoc\",\n      required: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nominator Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"nominatorName\",\n      required: true,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), data.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: emp.employeeName,\n        children: emp.employeeName\n      }, emp.employeeId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nominatorDept\",\n      readOnly: true,\n      value: form.nominatorDept,\n      placeholder: \"Nominator Dept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nominatorDesig\",\n      readOnly: true,\n      value: form.nominatorDesig,\n      placeholder: \"Nominator Designation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(NominationForm, \"+Ipj7WyxENxRnf7sMF1sPSvR6xo=\");\n_c = NominationForm;\nexport default NominationForm;\nvar _c;\n$RefreshReg$(_c, \"NominationForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","NominationForm","_s","data","setData","form","setForm","employeeName","employeeId","department","designation","yearOfNomination","Date","getFullYear","awardType","filledDoc","nominatorName","nominatorDept","nominatorDesig","fetchData","res","get","err","console","error","handleChange","e","name","value","files","target","emp","find","prev","nom","handleSubmit","preventDefault","fd","FormData","Object","entries","forEach","k","v","append","post","headers","alert","onSubmit","encType","children","fileName","_jsxFileName","lineNumber","columnNumber","required","onChange","map","readOnly","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Monika Sm/Annual-Rewards/annual-reward-form/client/src/components/NominationForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst NominationForm = () => {\r\n  const [data, setData] = useState([]);\r\n  const [form, setForm] = useState({\r\n    employeeName: \"\",\r\n    employeeId: \"\",\r\n    department: \"\",\r\n    designation: \"\",\r\n    yearOfNomination: new Date().getFullYear() - 1,\r\n    awardType: \"\",\r\n    filledDoc: null,\r\n    nominatorName: \"\",\r\n    nominatorDept: \"\",\r\n    nominatorDesig: \"\",\r\n  });\r\n\r\n  // Fetch employee data from MongoDB via backend API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/employees\");\r\n        setData(res.data); // Assumes an array of employee objects\r\n      } catch (err) {\r\n        console.error(\"Failed to load employee data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    setForm({ ...form, [name]: files ? files[0] : value });\r\n\r\n    // Autofill employee info\r\n    if (name === \"employeeName\") {\r\n      const emp = data.find((emp) => emp.employeeName === value);\r\n      if (emp) {\r\n        setForm((prev) => ({\r\n          ...prev,\r\n          employeeId: emp.employeeId,\r\n          department: emp.department,\r\n          designation: emp.designation,\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Autofill nominator info\r\n    if (name === \"nominatorName\") {\r\n      const nom = data.find((emp) => emp.employeeName === value);\r\n      if (nom) {\r\n        setForm((prev) => ({\r\n          ...prev,\r\n          nominatorDept: nom.department,\r\n          nominatorDesig: nom.designation,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const fd = new FormData();\r\n    Object.entries(form).forEach(([k, v]) => fd.append(k, v));\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/nominations\", fd, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(\"Nomination submitted successfully!\");\r\n      // Optionally reset form\r\n    } catch (err) {\r\n      alert(\"Submission failed\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n      <h2>Annual Nomination Form</h2>\r\n\r\n      <label>Employee Name</label>\r\n      <select name=\"employeeName\" required onChange={handleChange}>\r\n        <option value=\"\">-- Select --</option>\r\n        {data.map((emp) => (\r\n          <option key={emp.employeeId} value={emp.employeeName}>\r\n            {emp.employeeName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input name=\"employeeId\" readOnly value={form.employeeId} placeholder=\"Employee ID\" />\r\n      <input name=\"department\" readOnly value={form.department} placeholder=\"Department\" />\r\n      <input name=\"designation\" readOnly value={form.designation} placeholder=\"Designation\" />\r\n      <input name=\"yearOfNomination\" readOnly value={form.yearOfNomination} />\r\n\r\n      <label>Award Type</label>\r\n      <select name=\"awardType\" required onChange={handleChange}>\r\n        <option value=\"\">-- Select Award --</option>\r\n        <option value=\"Team Awesome Award\">Team Awesome Award</option>\r\n        <option value=\"Outstanding Leadership\">Outstanding Leadership</option>\r\n        {/* Add more award types */}\r\n      </select>\r\n\r\n      <label>Upload Filled Document</label>\r\n      <input type=\"file\" name=\"filledDoc\" required onChange={handleChange} />\r\n\r\n      <label>Nominator Name</label>\r\n      <select name=\"nominatorName\" required onChange={handleChange}>\r\n        <option value=\"\">-- Select --</option>\r\n        {data.map((emp) => (\r\n          <option key={emp.employeeId} value={emp.employeeName}>\r\n            {emp.employeeName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input name=\"nominatorDept\" readOnly value={form.nominatorDept} placeholder=\"Nominator Dept\" />\r\n      <input name=\"nominatorDesig\" readOnly value={form.nominatorDesig} placeholder=\"Nominator Designation\" />\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NominationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}