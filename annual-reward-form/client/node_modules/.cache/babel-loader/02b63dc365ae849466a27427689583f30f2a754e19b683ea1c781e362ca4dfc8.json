{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monika Sm\\\\Annual-Rewards\\\\annual-reward-form\\\\client\\\\src\\\\components\\\\NominationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./NominationForm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questionMap = {\n  \"Team Awesome Award\": [\"Describe how the team collaborated to achieve success.\", \"What impact did the team's efforts have on business outcomes?\"],\n  \"Peer Appreciation Award\": [\"How has the nominee supported their peers beyond expectations?\", \"Share a specific instance of teamwork demonstrated by the nominee.\"],\n  \"Customer Service Performance\": [\"Describe a moment the nominee went above and beyond for a customer.\", \"How has the nominee impacted customer satisfaction?\"],\n  \"Outstanding Leadership\": [\"How has the nominee demonstrated exceptional leadership?\", \"What results were achieved under the nominee’s leadership?\"],\n  \"Beyond the Call of Duty\": [\"Describe an incident where the nominee exceeded their responsibilities.\", \"What challenges did they overcome and how?\"],\n  \"Ace of Initiative\": [\"How did the nominee demonstrate proactive behavior?\", \"What improvements or innovations did their initiative lead to?\"],\n  \"Spotlight Award\": [\"What standout accomplishment led to this nomination?\", \"How has the nominee inspired others through their performance?\"],\n  \"Top Performance - Honor Club\": [\"What consistent top performance has the nominee shown?\", \"Share metrics or examples that demonstrate excellence.\"]\n};\nconst NominationForm = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [divisions, setDivisions] = useState([]);\n  const [selectedDivision, setSelectedDivision] = useState(\"\");\n  const currentDate = new Date();\n  const formattedMonthYear = `${currentDate.toLocaleString(\"default\", {\n    month: \"long\"\n  })} ${currentDate.getFullYear() - 1}`;\n  const [docUrl, setDocUrl] = useState(\"\");\n  const [showExtras, setShowExtras] = useState(false);\n  const [awardQuestions, setAwardQuestions] = useState([\"\", \"\"]);\n  const [form, setForm] = useState({\n    employeeName: \"\",\n    employeeId: \"\",\n    employeeEmail: \"\",\n    department: \"\",\n    designation: \"\",\n    yearOfNomination: formattedMonthYear,\n    awardType: \"\",\n    filledDoc: null,\n    justification: \"\",\n    recommendation: \"\",\n    nominatorName: \"\",\n    nominatorDept: \"\",\n    nominatorDesig: \"\",\n    nominatorEmail: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/employees\");\n        setData(res.data);\n        const uniqueDivisions = [...new Set(res.data.map(emp => emp.division))];\n        setDivisions(uniqueDivisions);\n      } catch (err) {\n        console.error(\"Failed to load employee data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === \"division\") {\n      setSelectedDivision(value);\n      setForm(prev => ({\n        ...prev,\n        employeeName: \"\",\n        employeeId: \"\",\n        employeeEmail: \"\",\n        department: \"\",\n        designation: \"\",\n        nominatorEmail: \"\"\n      }));\n      return;\n    }\n    if (name === \"awardType\") {\n      let url = \"\";\n      let show = true;\n      let questions = [\"\", \"\"];\n      switch (value) {\n        case \"Team Awesome Award\":\n        case \"Top Performance - Honor Club\":\n          url = \"team_award.docx\";\n          break;\n        case \"Peer Appreciation Award\":\n        case \"Customer Service Performance\":\n        case \"Spotlight Award\":\n          url = \"peer_award.docx\";\n          break;\n        case \"Outstanding Leadership\":\n        case \"Beyond the Call of Duty\":\n        case \"Ace of Initiative\":\n          url = \"leadership_award.docx\";\n          break;\n        default:\n          show = false;\n          url = \"\";\n      }\n      setDocUrl(url);\n      setShowExtras(show);\n      setAwardQuestions(questionMap[value] || [\"\", \"\"]);\n    }\n    setForm(prev => ({\n      ...prev,\n      [name]: files ? files[0] : value\n    }));\n    if (name === \"employeeName\") {\n      const emp = data.find(emp => emp.name === value);\n      if (emp) {\n        setForm(prev => ({\n          ...prev,\n          employeeId: emp.empId,\n          department: emp.department,\n          designation: emp.designation,\n          employeeEmail: emp.email\n        }));\n      }\n    }\n    if (name === \"nominatorName\") {\n      const nom = data.find(emp => emp.name === value);\n      if (nom) {\n        setForm(prev => ({\n          ...prev,\n          nominatorDept: nom.department,\n          nominatorDesig: nom.designation,\n          nominatorEmail: nom.email\n        }));\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const employee = data.find(emp => emp.name === form.employeeName);\n      const nominator = data.find(emp => emp.name === form.nominatorName);\n      if (!employee || !nominator) {\n        alert(\"Invalid employee or nominator selected.\");\n        return;\n      }\n      const fd = new FormData();\n      fd.append(\"employeeName\", form.employeeName);\n      fd.append(\"employeeId\", form.employeeId);\n      fd.append(\"department\", form.department);\n      fd.append(\"designation\", form.designation);\n      fd.append(\"employeeEmail\", form.employeeEmail); // ✅ new\n      fd.append(\"yearOfNomination\", form.yearOfNomination);\n      fd.append(\"awardType\", form.awardType);\n      fd.append(\"filledDoc\", form.filledDoc);\n      fd.append(\"justification\", form.justification);\n      fd.append(\"recommendation\", form.recommendation);\n      fd.append(\"nominatorName\", form.nominatorName);\n      fd.append(\"nominatorDept\", form.nominatorDept);\n      fd.append(\"nominatorDesig\", form.nominatorDesig);\n      fd.append(\"nominatorEmail\", form.nominatorEmail); // ✅ new\n\n      // Add structured answers\n      const answers = [{\n        question: awardQuestions[0],\n        answer: form.justification\n      }, {\n        question: awardQuestions[1],\n        answer: form.recommendation\n      }];\n      fd.append(\"answers\", JSON.stringify(answers));\n      await axios.post(\"http://localhost:5000/api/nominations\", fd, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"✅ Nomination submitted successfully!\");\n\n      // Reset form\n      setForm({\n        employeeName: \"\",\n        employeeId: \"\",\n        employeeEmail: \"\",\n        department: \"\",\n        designation: \"\",\n        yearOfNomination: formattedMonthYear,\n        awardType: \"\",\n        filledDoc: null,\n        justification: \"\",\n        recommendation: \"\",\n        nominatorName: \"\",\n        nominatorDept: \"\",\n        nominatorDesig: \"\",\n        nominatorEmail: \"\"\n      });\n      setSelectedDivision(\"\");\n      setDocUrl(\"\");\n      setShowExtras(false);\n      setAwardQuestions([\"\", \"\"]);\n      const fileInput = document.querySelector('input[name=\"filledDoc\"]');\n      if (fileInput) fileInput.value = \"\";\n    } catch (err) {\n      console.error(\"❌ Submission failed:\", err);\n      alert(\"❌ Submission failed\");\n    }\n  };\n  const filteredEmployees = data.filter(emp => emp.division === selectedDivision);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"award-form\",\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Annual Award Nomination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"division\",\n      children: \"Select Division\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"division\",\n      value: selectedDivision,\n      required: true,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Division --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), divisions.map(div => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: div,\n        children: div\n      }, div, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"employeeName\",\n      children: \"Employee Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"employeeName\",\n      required: true,\n      value: form.employeeName,\n      onChange: handleChange,\n      disabled: !selectedDivision,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Employee --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), filteredEmployees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: emp.name,\n        children: emp.name\n      }, emp.empId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Employee ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"employeeId\",\n      readOnly: true,\n      value: form.employeeId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Employee Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"employeeEmail\",\n      readOnly: true,\n      value: form.employeeEmail || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"department\",\n      readOnly: true,\n      value: form.department || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Designation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"designation\",\n      readOnly: true,\n      value: form.designation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Year of Nomination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"yearOfNomination\",\n      readOnly: true,\n      value: form.yearOfNomination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Award Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"awardType\",\n      required: true,\n      value: form.awardType,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Award Type --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), Object.keys(questionMap).map(award => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: award,\n        children: award\n      }, award, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), showExtras && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please download and fill the document:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: docUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          download: true,\n          children: [\"Download \", docUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"justification\",\n        children: awardQuestions[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"justification\",\n        required: true,\n        value: form.justification,\n        onChange: handleChange,\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"recommendation\",\n        children: awardQuestions[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"recommendation\",\n        required: true,\n        value: form.recommendation,\n        onChange: handleChange,\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"filledDoc\",\n      children: \"Upload Completed Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"filledDoc\",\n      accept: \".doc,.docx,.pdf\",\n      required: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nominatorName\",\n      children: \"Nominator Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"nominatorName\",\n      required: true,\n      value: form.nominatorName,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Nominator --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), data.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: emp.name,\n        children: emp.name\n      }, emp.empId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nominator Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nominatorEmail\",\n      readOnly: true,\n      value: form.nominatorEmail || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nominator Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nominatorDept\",\n      readOnly: true,\n      value: form.nominatorDept || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nominator Designation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nominatorDesig\",\n      readOnly: true,\n      value: form.nominatorDesig || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Nomination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(NominationForm, \"JN2ceDAkL5JDH+XGcJJrR9RwXeI=\");\n_c = NominationForm;\nexport default NominationForm;\nvar _c;\n$RefreshReg$(_c, \"NominationForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","questionMap","NominationForm","_s","data","setData","divisions","setDivisions","selectedDivision","setSelectedDivision","currentDate","Date","formattedMonthYear","toLocaleString","month","getFullYear","docUrl","setDocUrl","showExtras","setShowExtras","awardQuestions","setAwardQuestions","form","setForm","employeeName","employeeId","employeeEmail","department","designation","yearOfNomination","awardType","filledDoc","justification","recommendation","nominatorName","nominatorDept","nominatorDesig","nominatorEmail","fetchData","res","get","uniqueDivisions","Set","map","emp","division","err","console","error","handleChange","e","name","value","files","target","prev","url","show","questions","find","empId","email","nom","handleSubmit","preventDefault","employee","nominator","alert","fd","FormData","append","answers","question","answer","JSON","stringify","post","headers","fileInput","document","querySelector","filteredEmployees","filter","className","onSubmit","encType","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","required","onChange","div","disabled","readOnly","Object","keys","award","style","marginTop","href","rel","download","rows","type","accept","_c","$RefreshReg$"],"sources":["C:/Users/Monika Sm/Annual-Rewards/annual-reward-form/client/src/components/NominationForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./NominationForm.css\";\r\n\r\nconst questionMap = {\r\n  \"Team Awesome Award\": [\r\n    \"Describe how the team collaborated to achieve success.\",\r\n    \"What impact did the team's efforts have on business outcomes?\",\r\n  ],\r\n  \"Peer Appreciation Award\": [\r\n    \"How has the nominee supported their peers beyond expectations?\",\r\n    \"Share a specific instance of teamwork demonstrated by the nominee.\",\r\n  ],\r\n  \"Customer Service Performance\": [\r\n    \"Describe a moment the nominee went above and beyond for a customer.\",\r\n    \"How has the nominee impacted customer satisfaction?\",\r\n  ],\r\n  \"Outstanding Leadership\": [\r\n    \"How has the nominee demonstrated exceptional leadership?\",\r\n    \"What results were achieved under the nominee’s leadership?\",\r\n  ],\r\n  \"Beyond the Call of Duty\": [\r\n    \"Describe an incident where the nominee exceeded their responsibilities.\",\r\n    \"What challenges did they overcome and how?\",\r\n  ],\r\n  \"Ace of Initiative\": [\r\n    \"How did the nominee demonstrate proactive behavior?\",\r\n    \"What improvements or innovations did their initiative lead to?\",\r\n  ],\r\n  \"Spotlight Award\": [\r\n    \"What standout accomplishment led to this nomination?\",\r\n    \"How has the nominee inspired others through their performance?\",\r\n  ],\r\n  \"Top Performance - Honor Club\": [\r\n    \"What consistent top performance has the nominee shown?\",\r\n    \"Share metrics or examples that demonstrate excellence.\",\r\n  ],\r\n};\r\n\r\nconst NominationForm = () => {\r\n  const [data, setData] = useState([]);\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [selectedDivision, setSelectedDivision] = useState(\"\");\r\n\r\n  const currentDate = new Date();\r\n  const formattedMonthYear = `${currentDate.toLocaleString(\"default\", {\r\n    month: \"long\",\r\n  })} ${currentDate.getFullYear() - 1}`;\r\n\r\n  const [docUrl, setDocUrl] = useState(\"\");\r\n  const [showExtras, setShowExtras] = useState(false);\r\n  const [awardQuestions, setAwardQuestions] = useState([\"\", \"\"]);\r\n\r\n  const [form, setForm] = useState({\r\n    employeeName: \"\",\r\n    employeeId: \"\",\r\n    employeeEmail: \"\", \r\n    department: \"\",\r\n    designation: \"\",\r\n    yearOfNomination: formattedMonthYear,\r\n    awardType: \"\",\r\n    filledDoc: null,\r\n    justification: \"\",\r\n    recommendation: \"\",\r\n    nominatorName: \"\",\r\n    nominatorDept: \"\",\r\n    nominatorDesig: \"\",\r\n    nominatorEmail: \"\", \r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/employees\");\r\n        setData(res.data);\r\n        const uniqueDivisions = [\r\n          ...new Set(res.data.map((emp) => emp.division)),\r\n        ];\r\n        setDivisions(uniqueDivisions);\r\n      } catch (err) {\r\n        console.error(\"Failed to load employee data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === \"division\") {\r\n      setSelectedDivision(value);\r\n      setForm((prev) => ({\r\n        ...prev,\r\n        employeeName: \"\",\r\n        employeeId: \"\",\r\n        employeeEmail: \"\",\r\n        department: \"\",\r\n        designation: \"\",\r\n        nominatorEmail: \"\",\r\n      }));\r\n      return;\r\n    }\r\n\r\n    if (name === \"awardType\") {\r\n      let url = \"\";\r\n      let show = true;\r\n      let questions = [\"\", \"\"];\r\n\r\n      switch (value) {\r\n        case \"Team Awesome Award\":\r\n        case \"Top Performance - Honor Club\":\r\n          url = \"team_award.docx\";\r\n          break;\r\n\r\n        case \"Peer Appreciation Award\":\r\n        case \"Customer Service Performance\":\r\n        case \"Spotlight Award\":\r\n          url = \"peer_award.docx\";\r\n          break;\r\n\r\n        case \"Outstanding Leadership\":\r\n        case \"Beyond the Call of Duty\":\r\n        case \"Ace of Initiative\":\r\n          url = \"leadership_award.docx\";\r\n          break;\r\n\r\n        default:\r\n          show = false;\r\n          url = \"\";\r\n      }\r\n\r\n      setDocUrl(url);\r\n      setShowExtras(show);\r\n      setAwardQuestions(questionMap[value] || [\"\", \"\"]);\r\n    }\r\n\r\n    setForm((prev) => ({\r\n      ...prev,\r\n      [name]: files ? files[0] : value,\r\n    }));\r\n\r\n    if (name === \"employeeName\") {\r\n      const emp = data.find((emp) => emp.name === value);\r\n      if (emp) {\r\n        setForm((prev) => ({\r\n          ...prev,\r\n          employeeId: emp.empId,\r\n          department: emp.department,\r\n          designation: emp.designation,\r\n          employeeEmail: emp.email,\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (name === \"nominatorName\") {\r\n      const nom = data.find((emp) => emp.name === value);\r\n      if (nom) {\r\n        setForm((prev) => ({\r\n          ...prev,\r\n          nominatorDept: nom.department,\r\n          nominatorDesig: nom.designation,\r\n          nominatorEmail: nom.email,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const employee = data.find((emp) => emp.name === form.employeeName);\r\n      const nominator = data.find((emp) => emp.name === form.nominatorName);\r\n\r\n      if (!employee || !nominator) {\r\n        alert(\"Invalid employee or nominator selected.\");\r\n        return;\r\n      }\r\n\r\n      const fd = new FormData();\r\n      fd.append(\"employeeName\", form.employeeName);\r\n      fd.append(\"employeeId\", form.employeeId);\r\n      fd.append(\"department\", form.department);\r\n      fd.append(\"designation\", form.designation);\r\n      fd.append(\"employeeEmail\", form.employeeEmail); // ✅ new\r\n      fd.append(\"yearOfNomination\", form.yearOfNomination);\r\n      fd.append(\"awardType\", form.awardType);\r\n      fd.append(\"filledDoc\", form.filledDoc);\r\n      fd.append(\"justification\", form.justification);\r\n      fd.append(\"recommendation\", form.recommendation);\r\n      fd.append(\"nominatorName\", form.nominatorName);\r\n      fd.append(\"nominatorDept\", form.nominatorDept);\r\n      fd.append(\"nominatorDesig\", form.nominatorDesig);\r\n      fd.append(\"nominatorEmail\", form.nominatorEmail); // ✅ new\r\n\r\n      // Add structured answers\r\n      const answers = [\r\n        { question: awardQuestions[0], answer: form.justification },\r\n        { question: awardQuestions[1], answer: form.recommendation },\r\n      ];\r\n      fd.append(\"answers\", JSON.stringify(answers));\r\n\r\n      await axios.post(\"http://localhost:5000/api/nominations\", fd, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"✅ Nomination submitted successfully!\");\r\n\r\n      // Reset form\r\n      setForm({\r\n        employeeName: \"\",\r\n        employeeId: \"\",\r\n        employeeEmail: \"\",\r\n        department: \"\",\r\n        designation: \"\",\r\n        yearOfNomination: formattedMonthYear,\r\n        awardType: \"\",\r\n        filledDoc: null,\r\n        justification: \"\",\r\n        recommendation: \"\",\r\n        nominatorName: \"\",\r\n        nominatorDept: \"\",\r\n        nominatorDesig: \"\",\r\n        nominatorEmail: \"\",\r\n      });\r\n      setSelectedDivision(\"\");\r\n      setDocUrl(\"\");\r\n      setShowExtras(false);\r\n      setAwardQuestions([\"\", \"\"]);\r\n\r\n      const fileInput = document.querySelector('input[name=\"filledDoc\"]');\r\n      if (fileInput) fileInput.value = \"\";\r\n    } catch (err) {\r\n      console.error(\"❌ Submission failed:\", err);\r\n      alert(\"❌ Submission failed\");\r\n    }\r\n  };\r\n\r\n\r\n  const filteredEmployees = data.filter(\r\n    (emp) => emp.division === selectedDivision\r\n  );\r\n\r\n  return (\r\n    <form\r\n      className=\"award-form\"\r\n      onSubmit={handleSubmit}\r\n      encType=\"multipart/form-data\"\r\n    >\r\n      <h2>Annual Award Nomination</h2>\r\n\r\n      <label htmlFor=\"division\">Select Division</label>\r\n      <select\r\n        name=\"division\"\r\n        value={selectedDivision}\r\n        required\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"\">-- Select Division --</option>\r\n        {divisions.map((div) => (\r\n          <option key={div} value={div}>\r\n            {div}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <label htmlFor=\"employeeName\">Employee Name</label>\r\n      <select\r\n        name=\"employeeName\"\r\n        required\r\n        value={form.employeeName}\r\n        onChange={handleChange}\r\n        disabled={!selectedDivision}\r\n      >\r\n        <option value=\"\">-- Select Employee --</option>\r\n        {filteredEmployees.map((emp) => (\r\n          <option key={emp.empId} value={emp.name}>\r\n            {emp.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <label>Employee ID</label>\r\n      <input name=\"employeeId\" readOnly value={form.employeeId} />\r\n\r\n      <label>Employee Email</label>\r\n     <input name=\"employeeEmail\" readOnly value={form.employeeEmail || \"\"} />\r\n\r\n      <label>Department</label>\r\n      <input name=\"department\" readOnly value={form.department || \"\"} />\r\n\r\n      <label>Designation</label>\r\n      <input name=\"designation\" readOnly value={form.designation} />\r\n\r\n      <label>Year of Nomination</label>\r\n      <input name=\"yearOfNomination\" readOnly value={form.yearOfNomination} />\r\n\r\n      <label>Award Type</label>\r\n      <select\r\n        name=\"awardType\"\r\n        required\r\n        value={form.awardType}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"\">-- Select Award Type --</option>\r\n        {Object.keys(questionMap).map((award) => (\r\n          <option key={award} value={award}>\r\n            {award}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {showExtras && (\r\n        <>\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <p>Please download and fill the document:</p>\r\n            <a\r\n              href={docUrl}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              download\r\n            >\r\n              Download {docUrl}\r\n            </a>\r\n          </div>\r\n\r\n          {/* Custom questions */}\r\n          <label htmlFor=\"justification\">{awardQuestions[0]}</label>\r\n          <textarea\r\n            name=\"justification\"\r\n            required\r\n            value={form.justification}\r\n            onChange={handleChange}\r\n            rows=\"4\"\r\n          ></textarea>\r\n\r\n          <label htmlFor=\"recommendation\">{awardQuestions[1]}</label>\r\n          <textarea\r\n            name=\"recommendation\"\r\n            required\r\n            value={form.recommendation}\r\n            onChange={handleChange}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </>\r\n      )}\r\n\r\n      <label htmlFor=\"filledDoc\">Upload Completed Document</label>\r\n      <input\r\n        type=\"file\"\r\n        name=\"filledDoc\"\r\n        accept=\".doc,.docx,.pdf\"\r\n        required\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <label htmlFor=\"nominatorName\">Nominator Name</label>\r\n      <select\r\n        name=\"nominatorName\"\r\n        required\r\n        value={form.nominatorName}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"\">-- Select Nominator --</option>\r\n        {data.map((emp) => (\r\n          <option key={emp.empId} value={emp.name}>\r\n            {emp.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n    <label>Nominator Email</label>\r\n    <input name=\"nominatorEmail\" readOnly value={form.nominatorEmail || \"\"} />\r\n\r\n\r\n      <label>Nominator Department</label>\r\n      <input name=\"nominatorDept\" readOnly value={form.nominatorDept || \"\"} />\r\n\r\n      <label>Nominator Designation</label>\r\n      <input name=\"nominatorDesig\" readOnly value={form.nominatorDesig || \"\"} />\r\n\r\n      <button type=\"submit\">Submit Nomination</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NominationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}